{
  "client": {
    "main": "entry point for client logic",
    "session": "manages socket connection to server",
    "views": {
      "login": "UI for user login",
      "reserve": "UI for reservation",
      "home": "UI for home/dashboard",
      "signup": "UI for user registration"
    }
  },
  "src":{
    "requests": {
      "baseRequest": "abstract request class for validation & serialization",
      "userRequest": "login/signup request handling",
      "reserveRequest": "reservation data request",
      "balanceRequest": "balance-related requests",
      "adminRequest": "admin-specific requests"
    },
    "shared": {
      "protocol": "defines message format between client and server",
      "utils": "common functions (e.g. json, date, etc.)",
      "constants": "shared enums, error codes"
    },
    "server": {
      "main": "entry point to run the server",
      "transport": {
        "osCheck": "check platform for compatibility",
        "runServer": "starts socket server, accepts connections",
        "clientHandeller" : "accepts clients and take request"
      },
      "controllers": {
        "userController": "handles user operations",
        "foodController": "handles food-related logic",
        "reserveController": "handles reservation logic",
        "balanceController": "handles user balance/payments",
        "baseController": "abstract class for all controllers",
        "diningHallController": "handles dining hall availability"
      },
      "models": {
        "baseModel": "abstract class for data models",
        "userModel": "represents user data and actions",
        "reserveModel": "reservation structure and logic",
        "foodModel": "represents food menu, options, etc.",
        "balanceModel": "balance tracking and transactions",
        "diningHallModel": "dining hall capacity and schedule"
      }
    }
  }
}